{"version":3,"sources":["api/index.ts","utils/index.ts","components/Search.tsx","components/List.tsx","components/LoadMore.tsx","reducer/actions.ts","reducer/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["searchRequest","query","page","a","fetch","process","str","split","join","toString","data","json","Response","Search","totalResults","Error","Input","SearchComponent","onSearch","loading","placeholder","enterButton","Text","Typography","Paragraph","Link","ListComponent","movies","loadMore","size","itemLayout","dataSource","rowKey","item","Title","renderItem","Item","extra","src","Poster","width","alt","Meta","title","href","imdbID","strong","Year","Type","LoadMoreComponent","onLoad","hasMore","className","onClick","START_LOADING","START_REFETCHING","STOP_LOADING","STOP_REFETCHING","NEW_SEARCH","ADD_MOVIE","newSearch","total","type","payload","initialState","refetchingLoding","searchLoding","reducer","state","App","useReducer","useMainState","dispatch","notification","useNotification","api","contextHolder","error","message","description","placement","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c3164a6.chunk.js","sourcesContent":["import { SearchResult, Response } from './types';\nimport { encodeQuery } from '../utils';\n\nexport const searchRequest: (query: string, page: number) => Promise<SearchResult> = async (query, page) => {\n    const data = await fetch(`https://www.omdbapi.com/?apikey=${\n        process.env.REACT_APP_API_KEY\n    }&s=${\n        encodeQuery(query)\n    }&page=${\n        page.toString()\n    }`);\n    const json: Response = await data.json();\n\n    if (json.Response === \"True\") {\n        return {\n            Search: json.Search,\n            totalResults: json.totalResults,\n        }\n    }\n\n    throw new Error(json.Error);\n};\n\n","/**\n * Change ' ' and '&' to ASCII encode.\n * @param str Query to encode.\n * @returns Encoded query.\n */\nexport const encodeQuery = (\n    str: string\n) => str.split('&').join('%26').split(' ').join('+');\n","import React from 'react';\nimport { Input } from 'antd';\n\nconst {Search} = Input;\n\ntype SearchComponentProps = {\n    onSearch: (query: string) => void;\n    loading: boolean;\n}\n\nexport const SearchComponent: React.FC<SearchComponentProps> = ({\n    onSearch,\n    loading,\n}) => {\n    return (<div>\n        <Search \n            placeholder=\"Title\"\n            loading={loading}\n            onSearch={onSearch}\n            enterButton\n        />\n    </div>);\n}\n","import React from 'react';\nimport { MovieInSearch } from '../types';\nimport { List, Typography } from 'antd';\n\ntype ListComponentProps = {\n    movies: MovieInSearch[];\n    loadMore: React.ReactNode;\n    loading: boolean;\n}\n\nconst {Text, Paragraph, Link} = Typography;\n\nexport const ListComponent: React.FC<ListComponentProps> = ({\n    movies,\n    loadMore,\n    loading,\n}) => {\n    return (<List\n        size=\"large\"\n        itemLayout=\"vertical\"\n        dataSource={movies}\n        loading={loading}\n        loadMore={loadMore}\n        rowKey={(item) => item.Title}\n        renderItem={(item) => (<List.Item \n            extra={<img src={item.Poster} width={150} alt=\"Poster\" />}\n        >\n            <List.Item.Meta \n                title={<Link href={`https://www.imdb.com/title/${item.imdbID}/`}>{item.Title}</Link>}\n            />\n            <Paragraph><Text strong>Year</Text>: {item.Year}</Paragraph>\n            <Paragraph><Text strong>Type</Text>: {item.Type}</Paragraph>\n        </List.Item>)}\n    />)\n}\n\n","import React from 'react';\nimport { Button } from 'antd';\nimport './LoadMore.css';\n\ntype LoadMoreComponentProps = {\n    onLoad: () => void;\n    hasMore: boolean;\n    loading: boolean;\n}\n\nexport const LoadMoreComponent: React.FC<LoadMoreComponentProps> = ({onLoad, hasMore, loading}) => {\n    return hasMore ? (<div className=\"load-more\">\n            <Button loading={loading} onClick={onLoad}>Load more</Button>\n        </div>) : <></>;\n};\n","import { MovieInSearch } from '../types';\n\nexport const START_LOADING = 'START_LOADING';\n\nexport const START_REFETCHING = 'START_REFETCHING';\n\nexport const STOP_LOADING = 'STOP_LOADING';\n\nexport const STOP_REFETCHING = 'STOP_REFETCHING';\n\nexport const NEW_SEARCH = 'NEW_SEARCH';\n\nexport const ADD_MOVIE = 'ADD_MOVIE';\n\nexport const startLoadingAction = () => ({type: START_LOADING});\n\nexport const startRefetchingAction = () => ({type: START_REFETCHING});\n\nexport const stopLoadingAction = () => ({type: STOP_LOADING});\n\nexport const stopRefetchingAction = () => ({type: STOP_REFETCHING});\n\nexport const newSearch = (movies: MovieInSearch[], total: number, query: string) => ({type: NEW_SEARCH, payload: {movies, total, query}});\n\nexport const addMovie = (movies: MovieInSearch[]) => ({type: ADD_MOVIE, payload: {movies}});\n","import { useReducer, Dispatch, ReducerAction, ReducerState } from 'react';\nimport { InitialState, MainReducer } from './types';\nimport { \n    NEW_SEARCH,\n    ADD_MOVIE,\n    START_LOADING,\n    START_REFETCHING,\n    STOP_LOADING,\n    STOP_REFETCHING,\n} from './actions';\n\nconst initialState: InitialState = {\n    movies: [],\n    total: 0,\n    query: '',\n    page: 1,\n    refetchingLoding: false,\n    searchLoding: false,\n}\n\nconst reducer: MainReducer = (state, {type, payload}) => {\n    switch (type) {\n        case START_LOADING:\n            return {\n                ...state,\n                searchLoding: true,\n            }\n        case STOP_LOADING:\n            return {\n                ...state,\n                searchLoding: false,\n            }\n        case START_REFETCHING:\n            return {\n                ...state,\n                refetchingLoding: true,\n            }\n        case STOP_REFETCHING:\n            return {\n                ...state,\n                refetchingLoding: false,\n            }\n        case NEW_SEARCH:\n            return {\n                ...state,\n                movies: payload.movies,\n                total: payload.total,\n                query: payload.query,\n                page: 2,\n                searchLoding: false,\n            }\n        case ADD_MOVIE:\n            return {\n                ...state,\n                movies: [...state.movies, ...payload.movies],\n                page: state.page + 1,\n                refetchingLoding: false,\n            }\n        default: \n           throw new Error('no default action')\n    } \n}\n\nconst useMainState: () => [ReducerState<MainReducer>, Dispatch<ReducerAction<MainReducer>>] = () => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return [state, dispatch]\n}\n\nexport {useMainState}\n","import React from 'react';\nimport { Typography, notification } from 'antd';\nimport { searchRequest } from './api'; \nimport { \n    SearchComponent,\n    ListComponent,\n    LoadMoreComponent,\n} from './components';\nimport { useMainState } from './reducer';\nimport {\n    newSearch,\n    addMovie,\n    startLoadingAction,\n    stopLoadingAction,\n    startRefetchingAction,\n    stopRefetchingAction,\n} from './reducer/actions';\nimport './App.css';\n\nconst {Title} = Typography;\n\n\nconst App: React.FC = () => {\n    const [state, dispatch] = useMainState();\n    const [api, contextHolder] = notification.useNotification();\n\n    const onSearch = async (query: string) => {\n        try {\n            dispatch(startLoadingAction());\n            const data = await searchRequest(query, 1);\n            \n            dispatch(newSearch(data.Search, data.totalResults, query));\n        } catch (e) {\n            dispatch(stopLoadingAction())\n            api.error({\n                message: 'Something went wrong',\n                description: e.message,\n                placement: 'topLeft',\n            });\n        }\n    }\n\n    const onLoad = async () => {\n        try {\n            dispatch(startRefetchingAction());\n            const data = await searchRequest(state.query, state.page);\n\n            dispatch(addMovie(data.Search));\n        } catch (e) {\n            dispatch(stopRefetchingAction())\n            api.error({\n                message: 'Something went wrong',\n                description: e.message,\n                placement: 'topLeft',\n            });\n        }\n    }\n\n    return (\n        <div className=\"site-layout-content\">\n            {contextHolder}\n            <Title>Search a movie</Title>\n            <SearchComponent  onSearch={onSearch} loading={state.searchLoding}/>\n            <ListComponent\n                loading={state.searchLoding}\n                movies={state.movies}\n                loadMore={<LoadMoreComponent\n                    loading={state.refetchingLoding} \n                    hasMore={state.total > state.movies.length}\n                    onLoad={onLoad}\n                />}\n            />\n        </div>\n    );\n}; \n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}